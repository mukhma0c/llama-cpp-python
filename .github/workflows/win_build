name: Build Release (Windows Only, Multi-Python, Max Compatibility)

on: workflow_dispatch

permissions:
  contents: write

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # We only need the Windows build
        os: [windows-2022]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        env:
          RUST_LOG: trace        
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv
          python -m uv pip install -e .[all] --verbose
        shell: cmd

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          # Build for Python 3.10, 3.11, and 3.13
          CIBW_BUILD: cp310-* cp311-* cp313-*
          # Pass CMake arguments to the build environment to create the most compatible build
          CIBW_ENVIRONMENT: 'CMAKE_ARGS="-DGGML_AVX=OFF -DGGML_AVX2=OFF -DGGML_AVX512=OFF -DGGML_FMA=OFF -DGGML_F16C=OFF"'
          # disable repair
          CIBW_REPAIR_WHEEL_COMMAND: ""
        with:
          package-dir: .
          output-dir: wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl
